<!DOCTYPE html>
{% comment %}
                Copyright (c) 2019-2020 Ramon van der Winkel.
                All rights reserved.
                Licensed under BSD-3-Clause-Clear. See LICENSE file for details.
{% endcomment %}

{% comment %}

    Dit document is de blauwdruk voor alle pagina's van de site.
    Andere template's beginnen met een 'extends' op deze template
    en kunnen de volgende block tags gebruiken om delen te vervangen:
        extraheader   uitbreiding in de head sectie
        title         pagina titel instellen
        pagina        de body van de pagina

{% endcomment %}

{% load static %}

<html lang="nl">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}{% endblock %}</title>
        <link rel="icon" href="{% static 'plein/logo_nhb_192x192.png' %}" sizes="192x192">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans&amp;display=swap">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Ubuntu&amp;display=swap">
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons+Round">
        <link rel="stylesheet" href="{% static 'materialize/materialize-new.css' %}">
        <link rel="stylesheet" href="{% static 'plein/site_layout.css' %}"> <!-- moet nÃ¡ materialize css -->
        {% block extraheader %}{% endblock %}
    </head>

    <body class="grey lighten-3">   <!-- grey lighten-4 is identical to #f5f5f5 from NHB style -->
        <div id="container">        <!-- css manipulates this to make space for the menu -->

            <!-- sidenav -->
            <div id="menu">
                <ul id="slide-out" class="sidenav sidenav-fixed">
                    {% include 'plein/menu.dtl' %}
                </ul>
            </div>

            <!-- main contents -->
            <div id="content">      <!-- css manipulates this -->
                <!-- button to call-up the sidenav; hidden when not needed -->
                <a id="discover-menu" href="#" data-target="slide-out" class="sidenav-trigger hide-on-large-only">
                    <i class="material-icons-round black-text">menu</i>
                </a>

                <div class="tap-target" data-target="discover-menu">
                    <div class="tap-target-content white-text">
                        <h5>Toegang tot het menu</h5>
                        <p>Gebruik de drie streepjes om het menu op te roepen</p>
                    </div>
                </div>

                <!-- screen-size indicator labels -->
                {% if is_debug %}
                    <div style="position: fixed; left: 320px; top: 2px; font-size:10px">
                        <span class="hide-unless-small">Small</span>
                        <span class="hide-unless-medium">Medium</span>
                        <span class="hide-unless-large">Large</span>
                        <span class="hide-unless-xlarge">Extra-large</span>
                    </div>
                {% endif %}

                <!-- echt pagina komt hier, vanuit de template -->
                {% block pagina %}{% endblock %}
            </div>
        </div>

        <!-- TODO: minimized javascript -->
        <script src="{% static 'materialize/materialize.js' %}"></script>
        <!--<script src="{% static 'materialize/materialize.min.js' %}"></script>-->

        <!-- framework init, after everything has been loaded and instantiated -->
        <script>
            function discover_popup_delayed_open() {
                // in de tussentijd kan het scherm al weer groter zijn geworden
                var menu_is_hidden = window.matchMedia("(max-width: 992px)");
                if (menu_is_hidden.matches) {
                    var elem = document.querySelector('.tap-target');
                    M.TapTarget.getInstance(elem).open();
                }
            }

            function discover_popup_show(mq_event) {
                // scherm is kleiner geworden (of initieel klein), dus toon de tap target
                if (mq_event == null || mq_event.matches) {
                    // cookie zorgt ervoor dat de pop-up maar 5x tonen
                    var count = getCookieNumber('menu_discover');
                    if (count < 3) {
                        document.cookie = 'menu_discover=' + (count + 1) + '; path=/';
                        // toon met een kleine vertraging
                        setTimeout(discover_popup_delayed_open, 2000);
                    }
                }
            }

            function discover_popup_hide(mq_event) {
                // scherm is kleiner geworden, dus haal de tap-target uit beeld
                if (mq_event.matches) {
                    var elem = document.querySelector('.tap-target');
                    M.TapTarget.getInstance(elem).close();
                }
            }

            document.addEventListener('DOMContentLoaded', function() {
                // sidenav
                var elems = document.querySelectorAll('.sidenav');
                var insts = M.Sidenav.init(elems, {});

                // accordeons
                // TODO: defaults statisch aanpassen
                options = { inDuration: 100,    // default is 300
                            outDuration: 100    // default is 300
                          };
                var elems = document.querySelectorAll('.collapsible');
                var insts = M.Collapsible.init(elems, options);

                // feature discovery
                var elems = document.querySelectorAll('.tap-target');
                var insts = M.TapTarget.init(elems, {});

                var count = getCookieNumber('menu_discover');
                if (count < 3) {
                    var menu_is_shown = window.matchMedia("(min-width: 992px)");
                    menu_is_shown.addListener(discover_popup_hide);

                    var menu_is_hidden = window.matchMedia("(max-width: 992px)");
                    menu_is_hidden.addListener(discover_popup_show);
                    if (menu_is_hidden.matches) {
                        // show immediately
                        discover_popup_show(null);
                    }
                }

                // rolgordijnen
                var elems = document.querySelectorAll('select');
                var insts = M.FormSelect.init(elems, {});
            })
        </script>

        <!-- helper functie om een opgeslagen cookie in te lezen -->
        <script>
            function getCookie(name) {
                var cookieValue = null;
                if (document.cookie && document.cookie !== '') {
                    var cookies = document.cookie.split(';');
                    for (var i = 0; i < cookies.length; i++) {
                        var cookie = cookies[i].trim();
                        // Does this cookie string begin with the name we want?
                        if (cookie.substring(0, name.length + 1) === (name + '=')) {
                            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                            break;
                        }
                    }
                }
                return cookieValue;
            }

            function getCookieNumber(name) {
                var value = getCookie(name);
                var number = 0;
                if (value != null) {
                    number = parseInt(value, 10);
                    if (isNaN(number)) number = 0;
                }
                return number;
            }
        </script>

        <!-- tabel filter -->
        <script>
            // wordt gebruikt om te reageren op de input van een gebruiker in een zoekveld
            // en regels van de tabel wel/niet zichtbaar te maken
            // kolommen waarin gezocht mag worden moeten het 'filter' attribuut hebben
            //          <thead>
            //              <th filter="on">Header1</th>
            //              <th>Header2<th>

            // Uitgebreider voorbeeld:
            //   <table class="white" id="table3">
            //     <thead>
            //       <tr>        <!-- filter veld -->
            //         <td colspan="2"></td>
            //         <td colspan="2" class="table-filter">
            //            <input class="table-filter" oninput="myTableFilter(this, 'table3')" placeholder="Zoeken"/>
            //         </td>
            //         <td colspan="3"></td>
            //       </tr>
            //       <tr>
            //         <th>Laatste poging</th>
            //         <th>Laatste inlog</th>
            //         <th filter="on">Inlog</th>
            //         <th filter="on">Naam</th>
            //         <th>Email is bevestigd</th>
            //         <th>Tweede factor</th>
            //          <th>Aangemaakt</th>
            //       </tr>
            //     </thead>

            function myTableFilter(zoekveld, tableId)
            {
                //console.log("myTableFilter: ", zoekveld);
                var table = document.getElementById(tableId);
                if (table == undefined) return;
                //console.log('  table: ', table);

                filter_tekst = zoekveld.value;
                //console.log('  filter_tekst: ', filter_tekst);

                // doorzoek de header kolommen op filter=on
                var filter_kolommen = new Array();
                for (var i=0, row; row = table.tHead.rows[i]; i++) {        // stops when row=null
                    for (var j=0, col_nr=0, cell; cell = row.cells[j]; j++) {         // stops when cell=null
                        if (cell.hasAttribute('filter')) filter_kolommen.push(col_nr);
                        if (cell.hasAttribute('colSpan')) {
                            //console.log('cell with colSpan: ', cell.colSpan);
                            col_nr += cell.colSpan;
                        } else {
                            col_nr += 1;
                        }
                    }
                }
                //console.log('kolom nummers met filter: ', filter_kolommen);

                var body = table.tBodies[0];
                //console.log("body: ", body);        // for debug
                for (var i=0, row; row = body.rows[i]; i++) {               // stops when row=null
                    // besluit om deze regel te tonen, of niet
                    var show = false;
                    // kijk of de zoekterm in een van de kozen kolommen voorkomt
                    filter_kolommen.forEach(kolom_nr => {
                            // TODO: dit is nog niet case-insensitive of accent-insensitive
                            if (row.cells[kolom_nr].innerText.indexOf(filter_tekst) != -1) show = true;
                        });
                    row.style.display = show ? 'table-row' : 'none';
                }
            }

            // zoek alle tabellen met een zoekveld en trigger de oninput method
            // dit is noodzakelijk bij gebruik van de browser 'back' knop
            // anders zijn de tabellen niet meer gefiltreerd
            window.addEventListener("load", function(){
                //console.log("load!");
                var tables = document.getElementsByTagName('table');
                //console.log('tables: ', tables);
                for (var i=0, table; table = tables[i]; i++) {
                    //console.log('  table: ', table);
                    inputs = table.getElementsByTagName('input');
                    if (inputs.length >= 1) {
                        myTableFilter(inputs[0], table.id);
                    }
                }

                // evalueer de posities van de labels van de forms
                // zodat het label niet over het ingevulde input veld staat
                M.updateTextFields();
            });
        </script>

    </body>
</html>
