# -*- coding: utf-8 -*-

#  Copyright (c) 2020-2024 Ramon van der Winkel.
#  All rights reserved.
#  Licensed under BSD-3-Clause-Clear. See LICENSE file for details.

from django.db import migrations, models


def init_taken(apps, _):
    """ Maak de enige tabel regel aan die gebruikt wordt door het management commando regiocomp_tussenstand """
    # haal de klassen op die van toepassing zijn tijdens deze migratie
    taken_klas = apps.get_model('Competitie', 'CompetitieTaken')

    taken_klas().save()


class Migration(migrations.Migration):

    """ Migratie class voor dit deel van de applicatie """

    # dit is de eerste
    initial = True

    # volgorde afdwingen
    dependencies = [
        ('Account', 'm0032_squashed'),
        ('BasisTypen', 'm0058_scheids_rk_bk'),
        ('Functie', 'm0025_squashed'),
        ('Geo', 'm0002_squashed'),
        ('Score', 'm0019_squashed'),
        ('Sporter', 'm0031_squashed'),
        ('Vereniging', 'm0007_squashed'),
        ('Wedstrijden', 'm0057_squashed'),
    ]

    # migratie functies
    operations = [
        migrations.CreateModel(
            name='Competitie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beschrijving', models.CharField(max_length=40)),
                ('afstand', models.CharField(choices=[('18', 'Indoor'), ('25', '25m 1pijl')], max_length=2)),
                ('begin_jaar', models.PositiveSmallIntegerField()),
                ('begin_fase_C', models.DateField(default='2000-01-01')),
                ('begin_fase_D_indiv', models.DateField(default='2000-01-01')),
                ('begin_fase_F', models.DateField(default='2000-01-01')),
                ('is_afgesloten', models.BooleanField(default=False)),
                ('begin_fase_P_indiv', models.DateField(default='2000-01-01')),
                ('einde_fase_P_indiv', models.DateField(default='2000-01-01')),
                ('regiocompetitie_is_afgesloten', models.BooleanField(default=False)),
                ('rk_indiv_afgesloten', models.BooleanField(default=False)),
                ('rk_teams_afgesloten', models.BooleanField(default=False)),
                ('einde_fase_F', models.DateField(default='2000-01-01')),
                ('datum_klassengrenzen_rk_bk_teams', models.DateField(default='2000-01-01')),
                ('begin_fase_L_indiv', models.DateField(default='2000-01-01')),
                ('einde_fase_L_indiv', models.DateField(default='2000-01-01')),
                ('begin_fase_L_teams', models.DateField(default='2000-01-01')),
                ('einde_fase_L_teams', models.DateField(default='2000-01-01')),
                ('klassengrenzen_vastgesteld', models.BooleanField(default=False)),
                ('klassengrenzen_vastgesteld_rk_bk', models.BooleanField(default=False)),
                ('aantal_scores_voor_rk_deelname', models.PositiveSmallIntegerField(default=6)),
                ('rk_afgelast_bericht', models.TextField(blank=True)),
                ('rk_is_afgelast', models.BooleanField(default=False)),
                ('begin_fase_P_teams', models.DateField(default='2000-01-01')),
                ('einde_fase_P_teams', models.DateField(default='2000-01-01')),
                ('bk_indiv_klassen_zijn_samengevoegd', models.BooleanField(default=False)),
                ('bk_teams_klassen_zijn_samengevoegd', models.BooleanField(default=False)),
                ('bk_indiv_afgesloten', models.BooleanField(default=False)),
                ('bk_teams_afgesloten', models.BooleanField(default=False)),
                ('bk_afgelast_bericht', models.TextField(blank=True)),
                ('bk_is_afgelast', models.BooleanField(default=False)),
                ('boogtypen', models.ManyToManyField(to='BasisTypen.boogtype')),
                ('teamtypen', models.ManyToManyField(to='BasisTypen.teamtype')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitieTeamKlasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volgorde', models.PositiveIntegerField()),
                ('beschrijving', models.CharField(max_length=80)),
                ('team_afkorting', models.CharField(max_length=3)),
                ('min_ag', models.DecimalField(decimal_places=3, max_digits=5)),
                ('is_voor_teams_rk_bk', models.BooleanField(default=False)),
                ('blazoen1_regio', models.CharField(choices=[('40', '40cm'), ('60', '60cm'), ('4S', '60cm 4-spot'),
                                                             ('DT', 'Dutch Target')],
                                                    default='40', max_length=2)),
                ('blazoen2_regio', models.CharField(choices=[('40', '40cm'), ('60', '60cm'), ('4S', '60cm 4-spot'),
                                                             ('DT', 'Dutch Target')],
                                                    default='40', max_length=2)),
                ('blazoen_rk_bk', models.CharField(choices=[('40', '40cm'), ('60', '60cm'), ('4S', '60cm 4-spot'),
                                                            ('DT', 'Dutch Target')],
                                                   default='40', max_length=2)),
                ('boog_typen', models.ManyToManyField(to='BasisTypen.boogtype')),
                ('competitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                 to='Competitie.competitie')),
                ('team_type', models.ForeignKey(on_delete=models.deletion.PROTECT, to='BasisTypen.teamtype')),
                ('titel_bk', models.CharField(default='', max_length=30)),
                ('krijgt_scheids_rk', models.BooleanField(default=False)),
                ('krijgt_scheids_bk', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Competitie team klasse',
                'verbose_name_plural': 'Competitie team klassen',
                'indexes': [models.Index(fields=['volgorde'], name='Competitie__volgord_054e8a_idx')],      # noqa
            },
        ),
        migrations.CreateModel(
            name='CompetitieIndivKlasse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beschrijving', models.CharField(max_length=80)),
                ('volgorde', models.PositiveIntegerField()),
                ('min_ag', models.DecimalField(decimal_places=3, max_digits=5)),
                ('is_onbekend', models.BooleanField(default=False)),
                ('is_aspirant_klasse', models.BooleanField(default=False)),
                ('is_ook_voor_rk_bk', models.BooleanField(default=False)),
                ('blazoen1_regio', models.CharField(choices=[('40', '40cm'), ('60', '60cm'), ('4S', '60cm 4-spot'),
                                                             ('DT', 'Dutch Target')],
                                                    default='40', max_length=2)),
                ('blazoen2_regio', models.CharField(choices=[('40', '40cm'), ('60', '60cm'), ('4S', '60cm 4-spot'),
                                                             ('DT', 'Dutch Target')],
                                                    default='40', max_length=2)),
                ('blazoen_rk_bk', models.CharField(choices=[('40', '40cm'), ('60', '60cm'), ('4S', '60cm 4-spot'),
                                                            ('DT', 'Dutch Target')],
                                                   default='40', max_length=2)),
                ('boogtype', models.ForeignKey(on_delete=models.deletion.PROTECT,
                                               to='BasisTypen.boogtype')),
                ('competitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                 to='Competitie.competitie')),
                ('leeftijdsklassen', models.ManyToManyField(to='BasisTypen.leeftijdsklasse')),
                ('titel_bk', models.CharField(default='', max_length=30)),
                ('krijgt_scheids_rk', models.BooleanField(default=False)),
                ('krijgt_scheids_bk', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Competitie indiv klasse',
                'verbose_name_plural': 'Competitie indiv klassen',
                'indexes': [models.Index(fields=['volgorde'], name='Competitie__volgord_476d31_idx')],      # noqa
            },
        ),
        migrations.CreateModel(
            name='CompetitieMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                 to='Competitie.competitie')),
                ('beschrijving', models.CharField(blank=True, max_length=100)),
                ('datum_wanneer', models.DateField()),
                ('tijd_begin_wedstrijd', models.TimeField()),
                ('indiv_klassen', models.ManyToManyField(blank=True, to='Competitie.competitieindivklasse')),
                ('locatie', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT,
                                              to='Locatie.locatie')),
                ('team_klassen', models.ManyToManyField(blank=True, to='Competitie.competitieteamklasse')),
                ('uitslag', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT,
                                              to='Score.uitslag')),
                ('vereniging', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT,
                                                 to='Vereniging.vereniging')),
                ('aantal_scheids', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Competitie match',
                'verbose_name_plural': 'Competitie matches',
            },
        ),
        migrations.CreateModel(
            name='Regiocompetitie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_afgesloten', models.BooleanField(default=False)),
                ('competitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                 to='Competitie.competitie')),
                ('regio', models.ForeignKey(on_delete=models.deletion.PROTECT,
                                            to='Geo.regio')),
                ('functie', models.ForeignKey(on_delete=models.deletion.PROTECT,
                                              to='Functie.functie')),
                ('inschrijf_methode', models.CharField(choices=[('1', 'Kies wedstrijden'),
                                                                ('2', 'Naar locatie wedstrijdklasse'),
                                                                ('3', 'Voorkeur dagdelen')],
                                                       default='2', max_length=1)),
                ('heeft_deelnemerslijst', models.BooleanField(default=False)),
                ('regio_heeft_vaste_teams', models.BooleanField(default=True)),
                ('regio_organiseert_teamcompetitie', models.BooleanField(default=True)),
                ('regio_team_punten_model', models.CharField(choices=[
                                                                ('2P', 'Twee punten systeem (2/1/0)'),
                                                                ('SS', 'Cumulatief: som van team totaal elke ronde'),
                                                                ('F1', 'Formule 1 systeem (10/8/6/5/4/3/2/1)')],
                                                             default='2P', max_length=2)),
                ('begin_fase_D', models.DateField(default='2001-01-01')),
                ('toegestane_dagdelen', models.CharField(blank=True, default='', max_length=40)),
                ('huidige_team_ronde', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RegiocompetitieRonde',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_nr', models.PositiveSmallIntegerField()),
                ('beschrijving', models.CharField(max_length=40)),
                ('cluster', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT,
                                              to='Geo.cluster')),
                ('regiocompetitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                      to='Competitie.regiocompetitie')),
                ('matches', models.ManyToManyField(blank=True, to='Competitie.competitiematch')),
            ],
        ),
        migrations.CreateModel(
            name='RegioCompetitieSporterBoog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score1', models.PositiveIntegerField(default=0)),
                ('score2', models.PositiveIntegerField(default=0)),
                ('score3', models.PositiveIntegerField(default=0)),
                ('score4', models.PositiveIntegerField(default=0)),
                ('score5', models.PositiveIntegerField(default=0)),
                ('score6', models.PositiveIntegerField(default=0)),
                ('score7', models.PositiveIntegerField(default=0)),
                ('totaal', models.PositiveIntegerField(default=0)),
                ('laagste_score_nr', models.PositiveIntegerField(default=0)),
                ('aantal_scores', models.PositiveSmallIntegerField(default=0)),
                ('gemiddelde', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('bij_vereniging', models.ForeignKey(on_delete=models.deletion.PROTECT,
                                                     to='Vereniging.vereniging')),
                ('regiocompetitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                      to='Competitie.regiocompetitie')),
                ('inschrijf_notitie', models.TextField(blank=True, default='')),
                ('inschrijf_voorkeur_team', models.BooleanField(default=False)),
                ('scores', models.ManyToManyField(blank=True, to='Score.score')),
                ('ag_voor_indiv', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('ag_voor_team', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('ag_voor_team_mag_aangepast_worden', models.BooleanField(default=False)),
                ('inschrijf_gekozen_matches', models.ManyToManyField(blank=True, to='Competitie.competitiematch')),
                ('inschrijf_voorkeur_dagdeel', models.CharField(choices=[('GN', 'Geen voorkeur'), ('AV', "'s Avonds"),
                                                                         ('MA', 'Maandag'), ('MAa', 'Maandagavond'),
                                                                         ('DI', 'Dinsdag'), ('DIa', 'Dinsdagavond'),
                                                                         ('WO', 'Woensdag'), ('WOa', 'Woensdagavond'),
                                                                         ('DO', 'Donderdag'), ('DOa', 'Donderdagavond'),
                                                                         ('VR', 'Vrijdag'), ('VRa', 'Vrijdagavond'),
                                                                         ('ZAT', 'Zaterdag'),
                                                                         ('ZAo', 'Zaterdagochtend'),
                                                                         ('ZAm', 'Zaterdagmiddag'),
                                                                         ('ZAa', 'Zaterdagavond'), ('ZON', 'Zondag'),
                                                                         ('ZOo', 'Zondagochtend'),
                                                                         ('ZOm', 'Zondagmiddag'),
                                                                         ('ZOa', 'Zondagavond'),
                                                                         ('WE', 'Weekend')],
                                                                default='GN', max_length=3)),
                ('gemiddelde_begin_team_ronde', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('sporterboog', models.ForeignKey(null=True, on_delete=models.deletion.PROTECT,
                                                  to='Sporter.sporterboog')),
                ('inschrijf_voorkeur_rk_bk', models.BooleanField(default=True)),
                ('aangemeld_door', models.ForeignKey(on_delete=models.deletion.SET_NULL,
                                                     blank=True, null=True, to='Account.account')),
                ('indiv_klasse', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                   to='Competitie.competitieindivklasse')),
                ('wanneer_aangemeld', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Regiocompetitie sporterboog',
                'verbose_name_plural': 'Regiocompetitie sportersboog',
                'indexes': [models.Index(fields=['aantal_scores'], name='Competitie__aantal__955e64_idx'),
                            models.Index(fields=['-gemiddelde'], name='Competitie__gemidde_1225ce_idx'),        # noqa
                            models.Index(fields=['aantal_scores', 'regiocompetitie'],
                                         name='Competitie__aantal__258001_idx')],
            },
        ),
        migrations.CreateModel(
            name='Kampioenschap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deel', models.CharField(choices=[('RK', 'RK'), ('BK', 'BK')], max_length=2)),
                ('is_afgesloten', models.BooleanField(default=False)),
                ('heeft_deelnemerslijst', models.BooleanField(default=False)),
                ('competitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                 to='Competitie.competitie')),
                ('functie', models.ForeignKey(on_delete=models.deletion.PROTECT,
                                              to='Functie.functie')),
                ('rayon', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT,
                                            to='Geo.rayon')),
                ('rk_bk_matches', models.ManyToManyField(blank=True, to='Competitie.competitiematch')),
            ],
            options={
                'verbose_name': 'Kampioenschap',
                'verbose_name_plural': 'Kampioenschappen',
            },
        ),
        migrations.CreateModel(
            name='KampioenschapSporterBoog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kampioen_label', models.CharField(blank=True, default='', max_length=50)),
                ('volgorde', models.PositiveSmallIntegerField(default=0)),
                ('gemiddelde', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('kampioenschap', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                    to='Competitie.kampioenschap')),
                ('bij_vereniging', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT,
                                                     to='Vereniging.vereniging')),
                ('bevestiging_gevraagd_op', models.DateTimeField(blank=True, null=True)),
                ('rank', models.PositiveSmallIntegerField(default=0)),
                ('deelname', models.CharField(choices=[('?', 'Onbekend'), ('J', 'Bevestigd'), ('N', 'Afgemeld')],
                                              default='?', max_length=1)),
                ('sporterboog', models.ForeignKey(null=True, on_delete=models.deletion.PROTECT,
                                                  to='Sporter.sporterboog')),
                ('gemiddelde_scores', models.CharField(blank=True, default='', max_length=24)),
                ('result_counts', models.CharField(blank=True, default='', max_length=20)),
                ('result_rank', models.PositiveSmallIntegerField(default=0)),
                ('result_volgorde', models.PositiveSmallIntegerField(default=99)),
                ('result_score_1', models.PositiveSmallIntegerField(default=0)),
                ('result_score_2', models.PositiveSmallIntegerField(default=0)),
                ('result_rk_teamscore_1', models.PositiveSmallIntegerField(default=0)),
                ('result_rk_teamscore_2', models.PositiveSmallIntegerField(default=0)),
                ('result_bk_teamscore_1', models.PositiveSmallIntegerField(default=0)),
                ('result_bk_teamscore_2', models.PositiveSmallIntegerField(default=0)),
                ('indiv_klasse', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                   to='Competitie.competitieindivklasse')),
                ('logboek', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Kampioenschap sporterboog',
                'verbose_name_plural': 'Kampioenschap sportersboog',
                'indexes': [models.Index(fields=['-gemiddelde'], name='Competitie__gemidde_e5f73d_idx'),    # noqa
                            models.Index(fields=['volgorde'], name='Competitie__volgord_b01f18_idx'),       # noqa
                            models.Index(fields=['rank'], name='Competitie__rank_3b305c_idx'),
                            models.Index(fields=['volgorde', '-gemiddelde'],
                                         name='Competitie__volgord_0ec600_idx')],                           # noqa
            },
        ),
        migrations.CreateModel(
            name='RegiocompetitieTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volg_nr', models.PositiveSmallIntegerField(default=0)),
                ('team_type', models.ForeignKey(on_delete=models.deletion.PROTECT, to='BasisTypen.teamtype')),
                ('team_naam', models.CharField(default='', max_length=50)),
                ('aanvangsgemiddelde', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('regiocompetitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                      to='Competitie.regiocompetitie')),
                ('leden', models.ManyToManyField(blank=True, to='Competitie.regiocompetitiesporterboog')),
                ('vereniging', models.ForeignKey(on_delete=models.deletion.PROTECT,
                                                 to='Vereniging.vereniging')),
                ('team_klasse', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                                  to='Competitie.competitieteamklasse')),
            ],
            options={
                'ordering': ['vereniging__ver_nr', 'volg_nr'],
            },
        ),
        migrations.CreateModel(
            name='RegiocompetitieTeamPoule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beschrijving', models.CharField(default='', max_length=100)),
                ('regiocompetitie', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                      to='Competitie.regiocompetitie')),
                ('teams', models.ManyToManyField(blank=True, to='Competitie.regiocompetitieteam')),
            ],
        ),
        migrations.CreateModel(
            name='RegiocompetitieRondeTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ronde_nr', models.PositiveSmallIntegerField(default=0)),
                ('team_score', models.PositiveSmallIntegerField(default=0)),
                ('team_punten', models.PositiveSmallIntegerField(default=0)),
                ('team', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                           to='Competitie.regiocompetitieteam')),
                ('deelnemers_feitelijk', models.ManyToManyField(blank=True, related_name='teamronde_feitelijk',
                                                                to='Competitie.regiocompetitiesporterboog')),
                ('deelnemers_geselecteerd', models.ManyToManyField(blank=True, related_name='teamronde_geselecteerd',
                                                                   to='Competitie.regiocompetitiesporterboog')),
                ('scorehist_feitelijk', models.ManyToManyField(blank=True, related_name='teamronde_feitelijk',
                                                               to='Score.scorehist')),
                ('scores_feitelijk', models.ManyToManyField(blank=True, related_name='teamronde_feitelijk',
                                                            to='Score.score')),
                ('logboek', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='KampioenschapTeamKlasseLimiet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limiet', models.PositiveSmallIntegerField(default=24)),
                ('kampioenschap', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                    to='Competitie.kampioenschap')),
                ('team_klasse', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                  to='Competitie.competitieteamklasse')),
            ],
            options={
                'verbose_name': 'Kampioenschap TeamKlasse Limiet',
                'verbose_name_plural': 'Kampioenschap TeamKlasse Limieten',
            },
        ),
        migrations.CreateModel(
            name='KampioenschapIndivKlasseLimiet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limiet', models.PositiveSmallIntegerField(default=24)),
                ('kampioenschap', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                    to='Competitie.kampioenschap')),
                ('indiv_klasse', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                   to='Competitie.competitieindivklasse')),
            ],
            options={
                'verbose_name': 'Kampioenschap IndivKlasse Limiet',
                'verbose_name_plural': 'Kampioenschap IndivKlasse Limieten',
            },
        ),
        migrations.CreateModel(
            name='KampioenschapTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volg_nr', models.PositiveSmallIntegerField(default=0)),
                ('team_naam', models.CharField(default='', max_length=50)),
                ('aanvangsgemiddelde', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('kampioenschap', models.ForeignKey(on_delete=models.deletion.CASCADE,
                                                    to='Competitie.kampioenschap')),
                ('vereniging', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT,
                                                 to='Vereniging.vereniging')),
                ('team_type', models.ForeignKey(null=True, on_delete=models.deletion.PROTECT,
                                                to='BasisTypen.teamtype')),
                ('feitelijke_leden', models.ManyToManyField(blank=True,
                                                            related_name='kampioenschapteam_feitelijke_leden',
                                                            to='Competitie.kampioenschapsporterboog')),
                ('gekoppelde_leden', models.ManyToManyField(blank=True,
                                                            related_name='kampioenschapteam_gekoppelde_leden',
                                                            to='Competitie.kampioenschapsporterboog')),
                ('tijdelijke_leden', models.ManyToManyField(blank=True,
                                                            related_name='kampioenschapteam_tijdelijke_leden',
                                                            to='Competitie.regiocompetitiesporterboog')),
                ('result_rank', models.PositiveSmallIntegerField(default=0)),
                ('result_volgorde', models.PositiveSmallIntegerField(default=0)),
                ('result_teamscore', models.PositiveSmallIntegerField(default=0)),
                ('result_counts', models.CharField(blank=True, default='', max_length=20)),
                ('team_klasse', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                                  to='Competitie.competitieteamklasse')),
                ('rank', models.PositiveSmallIntegerField(default=0)),
                ('rk_kampioen_label', models.CharField(blank=True, default='', max_length=50)),
                ('volgorde', models.PositiveSmallIntegerField(default=0)),
                ('deelname', models.CharField(choices=[('?', 'Onbekend'), ('J', 'Bevestigd'), ('N', 'Afgemeld')],
                                              default='?', max_length=1)),
                ('is_reserve', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitieMutatie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('mutatie', models.PositiveSmallIntegerField(default=0)),
                ('is_verwerkt', models.BooleanField(default=False)),
                ('door', models.CharField(default='', max_length=50)),
                ('cut_oud', models.PositiveSmallIntegerField(default=0)),
                ('cut_nieuw', models.PositiveSmallIntegerField(default=0)),
                ('regiocompetitie', models.ForeignKey(blank=True, null=True,
                                                      on_delete=models.deletion.CASCADE,
                                                      to='Competitie.regiocompetitie')),
                ('deelnemer', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                                to='Competitie.kampioenschapsporterboog')),
                ('competitie', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                                 to='Competitie.competitie')),
                ('kampioenschap', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                                    to='Competitie.kampioenschap')),
                ('indiv_klasse', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                                   to='Competitie.competitieindivklasse')),
                ('team_klasse', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.CASCADE,
                                                  to='Competitie.competitieteamklasse')),
            ],
            options={
                'verbose_name': 'Competitie mutatie',
            },
        ),
        migrations.CreateModel(
            name='CompetitieTaken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hoogste_scorehist', models.ForeignKey(on_delete=models.deletion.SET_NULL,
                                                        blank=True, null=True, to='Score.scorehist')),
                ('hoogste_mutatie', models.ForeignKey(on_delete=models.deletion.SET_NULL,
                                                      blank=True, null=True, to='Competitie.competitiemutatie')),
            ],
        ),
        migrations.RunPython(code=init_taken),
    ]

# end of file
